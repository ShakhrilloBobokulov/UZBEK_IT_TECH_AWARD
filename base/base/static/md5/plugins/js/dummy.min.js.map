{"version":3,"file":"dummy.min.js","sources":["../../../src/plugins/dummy/js/mdb/util/index.js","../../../src/plugins/dummy/js/mdb/dom/data.js","../../../src/plugins/dummy/js/mdb/dom/manipulator.js","../../../src/plugins/dummy/js/mdb/dom/polyfill.js","../../../src/plugins/dummy/js/mdb/dom/selector-engine.js","../../../src/plugins/dummy/js/words.js","../../../src/plugins/dummy/js/dummy.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-beta1): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000;\nconst MILLISECONDS_MULTIPLIER = 1000;\nconst TRANSITION_END = 'transitionend';\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nconst toType = (obj) => {\n  if (obj === null || obj === undefined) {\n    return `${obj}`;\n  }\n\n  return {}.toString\n    .call(obj)\n    .match(/\\s([a-z]+)/i)[1]\n    .toLowerCase();\n};\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst getUID = (prefix) => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID);\n  } while (document.getElementById(prefix));\n\n  return prefix;\n};\n\nconst getSelector = (element) => {\n  let selector = element.getAttribute('data-mdb-target');\n\n  if (!selector || selector === '#') {\n    const hrefAttr = element.getAttribute('href');\n\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;\n  }\n\n  return selector;\n};\n\nconst getSelectorFromElement = (element) => {\n  const selector = getSelector(element);\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null;\n  }\n\n  return null;\n};\n\nconst getElementFromSelector = (element) => {\n  const selector = getSelector(element);\n\n  return selector ? document.querySelector(selector) : null;\n};\n\nconst getTransitionDurationFromElement = (element) => {\n  if (!element) {\n    return 0;\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration);\n  const floatTransitionDelay = Number.parseFloat(transitionDelay);\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0;\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0];\n  transitionDelay = transitionDelay.split(',')[0];\n\n  return (\n    (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) *\n    MILLISECONDS_MULTIPLIER\n  );\n};\n\nconst triggerTransitionEnd = (element) => {\n  element.dispatchEvent(new Event(TRANSITION_END));\n};\n\nconst isElement = (obj) => (obj[0] || obj).nodeType;\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false;\n  const durationPadding = 5;\n  const emulatedDuration = duration + durationPadding;\n\n  function listener() {\n    called = true;\n    element.removeEventListener(TRANSITION_END, listener);\n  }\n\n  element.addEventListener(TRANSITION_END, listener);\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(element);\n    }\n  }, emulatedDuration);\n};\n\nconst typeCheckConfig = (componentName, config, configTypes) => {\n  Object.keys(configTypes).forEach((property) => {\n    const expectedTypes = configTypes[property];\n    const value = config[property];\n    const valueType = value && isElement(value) ? 'element' : toType(value);\n\n    if (!new RegExp(expectedTypes).test(valueType)) {\n      throw new Error(\n        `${componentName.toUpperCase()}: ` +\n          `Option \"${property}\" provided type \"${valueType}\" ` +\n          `but expected type \"${expectedTypes}\".`\n      );\n    }\n  });\n};\n\nconst isVisible = (element) => {\n  if (!element) {\n    return false;\n  }\n\n  if (element.style && element.parentNode && element.parentNode.style) {\n    const elementStyle = getComputedStyle(element);\n    const parentNodeStyle = getComputedStyle(element.parentNode);\n\n    return (\n      elementStyle.display !== 'none' &&\n      parentNodeStyle.display !== 'none' &&\n      elementStyle.visibility !== 'hidden'\n    );\n  }\n\n  return false;\n};\n\nconst findShadowRoot = (element) => {\n  if (!document.documentElement.attachShadow) {\n    return null;\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode();\n    return root instanceof ShadowRoot ? root : null;\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element;\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null;\n  }\n\n  return findShadowRoot(element.parentNode);\n};\n\nconst noop = () => function () {};\n\nconst reflow = (element) => element.offsetHeight;\n\nconst getjQuery = () => {\n  const { jQuery } = window;\n\n  if (jQuery && !document.body.hasAttribute('data-mdb-no-jquery')) {\n    return jQuery;\n  }\n\n  return null;\n};\n\nconst onDOMContentLoaded = (callback) => {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', callback);\n  } else {\n    callback();\n  }\n};\n\nconst isRTL = document.documentElement.dir === 'rtl';\n\nconst array = (collection) => {\n  return Array.from(collection);\n};\n\nconst element = (tag) => {\n  return document.createElement(tag);\n};\n\nexport {\n  getjQuery,\n  TRANSITION_END,\n  getUID,\n  getSelectorFromElement,\n  getElementFromSelector,\n  getTransitionDurationFromElement,\n  triggerTransitionEnd,\n  isElement,\n  emulateTransitionEnd,\n  typeCheckConfig,\n  isVisible,\n  findShadowRoot,\n  noop,\n  reflow,\n  array,\n  element,\n  onDOMContentLoaded,\n  isRTL,\n};\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst mapData = (() => {\n  const storeData = {};\n  let id = 1;\n  return {\n    set(element, key, data) {\n      if (typeof element[key] === 'undefined') {\n        element[key] = {\n          key,\n          id,\n        };\n        id++;\n      }\n\n      storeData[element[key].id] = data;\n    },\n    get(element, key) {\n      if (!element || typeof element[key] === 'undefined') {\n        return null;\n      }\n\n      const keyProperties = element[key];\n      if (keyProperties.key === key) {\n        return storeData[keyProperties.id];\n      }\n\n      return null;\n    },\n    delete(element, key) {\n      if (typeof element[key] === 'undefined') {\n        return;\n      }\n\n      const keyProperties = element[key];\n      if (keyProperties.key === key) {\n        delete storeData[keyProperties.id];\n        delete element[key];\n      }\n    },\n  };\n})();\n\nconst Data = {\n  setData(instance, key, data) {\n    mapData.set(instance, key, data);\n  },\n  getData(instance, key) {\n    return mapData.get(instance, key);\n  },\n  removeData(instance, key) {\n    mapData.delete(instance, key);\n  },\n};\n\nexport default Data;\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-beta1): dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(val) {\n  if (val === 'true') {\n    return true;\n  }\n\n  if (val === 'false') {\n    return false;\n  }\n\n  if (val === Number(val).toString()) {\n    return Number(val);\n  }\n\n  if (val === '' || val === 'null') {\n    return null;\n  }\n\n  return val;\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, (chr) => `-${chr.toLowerCase()}`);\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-mdb-${normalizeDataKey(key)}`, value);\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-mdb-${normalizeDataKey(key)}`);\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {};\n    }\n\n    const attributes = {\n      ...element.dataset,\n    };\n\n    Object.keys(attributes)\n      .filter((key) => key.startsWith('mdb'))\n      .forEach((key) => {\n        let pureKey = key.replace(/^mdb/, '');\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n        attributes[pureKey] = normalizeData(attributes[key]);\n      });\n\n    return attributes;\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-mdb-${normalizeDataKey(key)}`));\n  },\n\n  offset(element) {\n    const rect = element.getBoundingClientRect();\n\n    return {\n      top: rect.top + document.body.scrollTop,\n      left: rect.left + document.body.scrollLeft,\n    };\n  },\n\n  position(element) {\n    return {\n      top: element.offsetTop,\n      left: element.offsetLeft,\n    };\n  },\n\n  style(element, style) {\n    Object.assign(element.style, style);\n  },\n\n  toggleClass(element, className) {\n    if (!element) {\n      return;\n    }\n\n    if (element.classList.contains(className)) {\n      element.classList.remove(className);\n    } else {\n      element.classList.add(className);\n    }\n  },\n\n  addClass(element, className) {\n    if (element.classList.contains(className)) return;\n    element.classList.add(className);\n  },\n\n  addStyle(element, style) {\n    Object.keys(style).forEach((property) => {\n      element.style[property] = style[property];\n    });\n  },\n\n  removeClass(element, className) {\n    if (!element.classList.contains(className)) return;\n    element.classList.remove(className);\n  },\n\n  hasClass(element, className) {\n    return element.classList.contains(className);\n  },\n};\n\nexport default Manipulator;\n","/* istanbul ignore file */\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/polyfill.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getUID } from '../util/index';\n\nlet findElements = Element.prototype.querySelectorAll;\nlet findElement = Element.prototype.querySelector;\n\n// MSEdge resets defaultPrevented flag upon dispatchEvent call if at least one listener is attached\nconst defaultPreventedPreservedOnDispatch = (() => {\n  const e = new CustomEvent('Bootstrap', {\n    cancelable: true,\n  });\n\n  const element = document.createElement('div');\n  element.addEventListener('Bootstrap', () => null);\n\n  e.preventDefault();\n  element.dispatchEvent(e);\n  return e.defaultPrevented;\n})();\n\nconst scopeSelectorRegex = /:scope\\b/;\nconst supportScopeQuery = (() => {\n  const element = document.createElement('div');\n\n  try {\n    element.querySelectorAll(':scope *');\n  } catch (_) {\n    return false;\n  }\n\n  return true;\n})();\n\nif (!supportScopeQuery) {\n  findElements = function (selector) {\n    if (!scopeSelectorRegex.test(selector)) {\n      return this.querySelectorAll(selector);\n    }\n\n    const hasId = Boolean(this.id);\n\n    if (!hasId) {\n      this.id = getUID('scope');\n    }\n\n    let nodeList = null;\n    try {\n      selector = selector.replace(scopeSelectorRegex, `#${this.id}`);\n      nodeList = this.querySelectorAll(selector);\n    } finally {\n      if (!hasId) {\n        this.removeAttribute('id');\n      }\n    }\n\n    return nodeList;\n  };\n\n  findElement = function (selector) {\n    if (!scopeSelectorRegex.test(selector)) {\n      return this.querySelector(selector);\n    }\n\n    const matches = find.call(this, selector);\n\n    if (typeof matches[0] !== 'undefined') {\n      return matches[0];\n    }\n\n    return null;\n  };\n}\n\nconst find = findElements;\nconst findOne = findElement;\n\nexport { find, findOne, defaultPreventedPreservedOnDispatch };\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { find as findFn, findOne } from './polyfill';\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3;\n\nconst SelectorEngine = {\n  closest(element, selector) {\n    return element.closest(selector);\n  },\n\n  matches(element, selector) {\n    return element.matches(selector);\n  },\n\n  find(selector, element = document.documentElement) {\n    return [].concat(...findFn.call(element, selector));\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return findOne.call(element, selector);\n  },\n\n  children(element, selector) {\n    const children = [].concat(...element.children);\n\n    return children.filter((child) => child.matches(selector));\n  },\n\n  parents(element, selector) {\n    const parents = [];\n\n    let ancestor = element.parentNode;\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (this.matches(ancestor, selector)) {\n        parents.push(ancestor);\n      }\n\n      ancestor = ancestor.parentNode;\n    }\n\n    return parents;\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling;\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous];\n      }\n\n      previous = previous.previousElementSibling;\n    }\n\n    return [];\n  },\n\n  next(element, selector) {\n    let next = element.nextElementSibling;\n\n    while (next) {\n      if (this.matches(next, selector)) {\n        return [next];\n      }\n\n      next = next.nextElementSibling;\n    }\n\n    return [];\n  },\n};\n\nexport default SelectorEngine;\n","const WORDS = [\n  'radioelement',\n  'actinolitic',\n  'chromic',\n  'strikeboard',\n  'cloverleaf',\n  'trimming',\n  'heedfulness',\n  'phenylamine',\n  'alloplasmatic',\n  'winnipeg',\n  'savour',\n  'airwoman',\n  'compute',\n  'nitrobenzene',\n  'coinstantaneously',\n  'havel',\n  'stimulatingly',\n  'superextreme',\n  'noyau',\n  'stark',\n  'preelect',\n  'scripture',\n  'rubric',\n  'revoted',\n  'melchizedek',\n  'intertidal',\n  'immorally',\n  'spacious',\n  'dodecastylar',\n  'modulate',\n  'botulinuses',\n  'aimlessly',\n  'mirkier',\n  'cadman',\n  'yokel',\n  'cactaceous',\n  'blame',\n  'bridelike',\n  'unexported',\n  'diapedesis',\n  'irritate',\n  'accuracy',\n  'keyman',\n  'habitudinal',\n  'outraved',\n  'militancy',\n  'contrive',\n  'unacetic',\n  'homoeopath',\n  'snippiness',\n  'nonnobility',\n  'stambul',\n  'schumpeter',\n  'eulis',\n  'gavin',\n  'rainproof',\n  'philonis',\n  'xograph',\n  'ester',\n  'anaglyph',\n  'equities',\n  'biosphere',\n  'premeditatingly',\n  'marg',\n  'stephanie',\n  'dauk',\n  'nomad',\n  'bootie',\n  'clark',\n  'spouter',\n  'crackly',\n  'corticate',\n  'hipping',\n  'contemptuous',\n  'unfree',\n  'swagman',\n  'bedizenment',\n  'snakeweed',\n  'reoperate',\n  'valorise',\n  'dido',\n  'cated',\n  'anatolian',\n  'stupefy',\n  'camaraderie',\n  'kenny',\n  'sweat',\n  'vaporimeter',\n  'lineamental',\n  'overcriticized',\n  'nonphilosophy',\n  'politicalize',\n  'professed',\n  'milstein',\n  'unit',\n  'revaccinate',\n  'parochial',\n  'soc',\n  'cudbear',\n  'intercarpellary',\n  'precociousness',\n  'pretaste',\n  'holophyte',\n  'scarless',\n  'rekindle',\n  'reappearance',\n  'dimensionless',\n  'julienne',\n  'gasholder',\n  'fluidally',\n  'teutonism',\n  'legroom',\n  'adolescent',\n  'camila',\n  'agana',\n  'overcertify',\n  'disembowelment',\n  'anemochorous',\n  'discreditability',\n  'unincludible',\n  'folia',\n  'frankfurter',\n  'maravedi',\n  'tribunitial',\n  'boulle',\n  'pretincture',\n  'hermetical',\n  'impanel',\n  'underyoke',\n  'beset',\n  'scoff',\n  'exophthalmos',\n  'manly',\n  'nahant',\n  'sandarac',\n  'diseasing',\n  'dolphinfishes',\n  'desulfurization',\n  'inescapableness',\n  'solum',\n  'outthrow',\n  'rareripe',\n  'highness',\n  'synonymized',\n  'attractive',\n  'residency',\n  'predaciou',\n  'dosshouse',\n  'crookesite',\n  'unmoldy',\n  'drawability',\n  'comedical',\n  'chromoplasmic',\n  'unillusioned',\n  'altimetrical',\n  'araucan',\n  'conveyor',\n  'laggardness',\n  'unpolitely',\n  'strutting',\n  'bloodwort',\n  'hysteretically',\n  'baalistic',\n  'contritely',\n  'nonexcavation',\n  'mdoc',\n  'benthamite',\n  'moseley',\n  'coercively',\n  'horologe',\n  'bivalvular',\n  'agribusiness',\n  'norbert',\n  'invigorated',\n  'imprudently',\n  'trippingly',\n  'mds',\n  'unabatable',\n  'assidaean',\n  'glandes',\n  'reidentify',\n  'fluffier',\n  'geek',\n  'unstunned',\n  'battue',\n  'innutritious',\n  'terminism',\n  'cannibalistically',\n  'flowerage',\n  'duopoly',\n  'jurisp',\n  'exitance',\n  'menace',\n  'speciously',\n  'ungossiping',\n  'realizable',\n  'candlenut',\n  'uncombinational',\n  'semifrontier',\n  'pseudopolitical',\n  'atomize',\n  'brunetness',\n  'reperused',\n  'leverrier',\n  'unaccustomed',\n  'aeaea',\n  'monopsony',\n  'posttibial',\n  'filbert',\n  'pellucidity',\n  'italian',\n  'preinstructional',\n  'balkanised',\n  'sanctity',\n  'multigravida',\n  'study',\n  'hulloo',\n  'gyges',\n  'tiglinic',\n  'dubonnet',\n  'postfebrile',\n  'cotype',\n  'abbreviator',\n  'saffian',\n  'zogan',\n  'pfitzner',\n  'decampment',\n  'predictated',\n  'prejudgement',\n  'gormandising',\n  'thoreau',\n  'ruralised',\n  'laryngeal',\n  'coleridgian',\n  'azerbaijani',\n  'featherlike',\n  'alogi',\n  'dunstable',\n  'punish',\n  'energistic',\n  'newsbeat',\n  'keswick',\n  'noncommutative',\n  'totable',\n  'pothunting',\n  'steatite',\n  'typikon',\n  'unanswering',\n  'repositories',\n  'peduncle',\n  'stirpiculture',\n  'varietally',\n  'burletta',\n  'salvia',\n  'farraginous',\n  'anteroom',\n  'rhamnaceous',\n  'southernwood',\n  'hyporight',\n  'dysteleological',\n  'kilopound',\n  'hyperbatic',\n  'barquisimeto',\n  'unfitly',\n  'humorless',\n  'untackling',\n  'doom',\n  'beefless',\n  'gruesomeness',\n  'yeastlike',\n  'leucosis',\n  'enrober',\n  'canton',\n  'gutterlike',\n  'plesiosaur',\n  'shaksperian',\n  'ramayana',\n  'factorize',\n  'currieries',\n  'carracci',\n  'unrevoked',\n  'purposed',\n  'kline',\n  'sanderling',\n  'inculpatory',\n  'postgenial',\n  'holism',\n  'clearly',\n  'alfur',\n  'tuberless',\n  'perugino',\n  'instilment',\n  'reamendment',\n  'trinitrophenylmethylnitramine',\n  'intertrafficking',\n  'predeterminate',\n  'cataplane',\n  'bleariest',\n];\n\nexport default WORDS;\n","import { typeCheckConfig, getjQuery, getUID, onDOMContentLoaded } from './mdb/util/index';\nimport Data from './mdb/dom/data';\nimport Manipulator from './mdb/dom/manipulator';\nimport SelectorEngine from './mdb/dom/selector-engine';\n\nimport WORDS from './words';\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'dummy';\nconst DATA_KEY = `mdb.${NAME}`;\n\nconst SELECTOR_DATA_INIT = '[data-mdb-dummy-init]';\nconst SELECTOR_DUMMY_CREATED = `[data-mdb-${NAME}-created]`;\n\nconst DEFAULT_OPTIONS = {\n  dummyText: 20,\n  dummyImg: '150',\n  dummyList: 5,\n  dummyTable: '5,5',\n  dummyCopy: null,\n  dummyRepeat: 1,\n  dummyTemplate: 'h1,p,table,h2,p,form,blockquote,img,ul',\n  dummyColor: null,\n  dummyTextColor: null,\n  dummyImgText: null,\n};\nconst OPTIONS_TYPE = {\n  dummyText: '(null || number)',\n  dummyImg: '(null || string)',\n  dummyList: '(null || number)',\n  dummyTable: '(null || string)',\n  dummyCopy: '(null || string)',\n  dummyRepeat: '(null || number)',\n  dummyTemplate: '(null || string)',\n  dummyColor: '(null || string)',\n  dummyTextColor: '(null || string)',\n  dummyImgText: '(null || string)',\n};\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Dummy {\n  constructor(element, options = {}) {\n    this._element = element;\n    this._jsOptions = options;\n    this._options = this._getConfig(options);\n\n    this._tag = null;\n    this._dummyAttributes = [];\n\n    if (this._element) {\n      Data.setData(element, DATA_KEY, this);\n      this._init();\n    }\n  }\n\n  // Public\n  dispose() {\n    Data.removeData(this._element, DATA_KEY);\n\n    const dummyCreated = SelectorEngine.find(SELECTOR_DUMMY_CREATED);\n\n    dummyCreated.forEach((dummy) => {\n      dummy.parentNode.removeChild(dummy);\n    });\n\n    this._element.innerHTML = '';\n\n    this._element = null;\n  }\n\n  init() {\n    this._init();\n  }\n\n  // Private\n  _getConfig(options) {\n    let attributes = Manipulator.getDataAttributes(this._element);\n\n    // default options allows to pass null/empty attributes se we can check if we have to create e.g. dummy text with default values\n    // in case of that we don't want to overwrite default values with null\n    attributes = this._cleanObjectFromNulls(attributes);\n    options = this._cleanObjectFromNulls(options);\n\n    const config = {\n      ...DEFAULT_OPTIONS,\n      ...attributes,\n      ...options,\n    };\n\n    typeCheckConfig(NAME, config, OPTIONS_TYPE);\n\n    return config;\n  }\n\n  _getImageSize() {\n    // in case someone pass only one argument JS will think its a number and .split method will crash\n    let [width, height] = `${this._options.dummyImg}`.split(',');\n\n    // prevent size crashes when user passes sizes like \"200 , 200\"\n    width = width ? width.trim() : width;\n    height = height ? height.trim() : height;\n\n    if (width === '100%') {\n      // get element original width\n      width = parseInt(this._element.getAttribute('width'), 10) || this._element.offsetWidth;\n\n      // or element parent original width\n      width = width || (this._element.parentNode && this._element.parentNode.offsetWidth);\n    }\n\n    if (height === '100%') {\n      height = parseInt(this._element.getAttribute('height'), 10) || this._element.offsetHeight;\n\n      height = height || (this._element.parentNode && this._element.parentNode.offsetHeight);\n    }\n\n    height = height || width;\n\n    return [width, height];\n  }\n\n  _getColor(attr) {\n    return this._options[attr] ? `/${this._options[attr].split('#')[1]}` : '';\n  }\n\n  _setDummyAttributes() {\n    let attributes = null;\n\n    if (Object.keys(this._jsOptions).length !== 0 && this._jsOptions.constructor === Object) {\n      attributes = this._jsOptions;\n    } else {\n      attributes = Manipulator.getDataAttributes(this._element);\n    }\n\n    Object.keys(attributes).forEach((key) => {\n      this._dummyAttributes.push(key);\n    });\n  }\n\n  _init() {\n    const { initMDB, Ripple } = mdb;\n    initMDB({ Ripple });\n\n    this._tag = this._element.tagName.toLowerCase();\n\n    this._setDummyAttributes();\n\n    this._startDummyFactory();\n  }\n\n  _startDummyFactory() {\n    const tagProperties = [\n      'dummyText',\n      'dummyImg',\n      'dummyList',\n      'dummyTable',\n      'dummyCopy',\n      'dummyRepeat',\n      'dummyTemplate',\n    ];\n\n    let hasTagAttribute = false;\n\n    tagProperties.forEach((prop) => {\n      if (this._dummyAttributes.includes(prop)) {\n        hasTagAttribute = true;\n      }\n    });\n\n    // case for when only class=\"dummy\" has been added to element\n    if (!hasTagAttribute) {\n      this._matchDummyWithTag();\n      return;\n    }\n\n    this._dummyAttributes.forEach((attr) => {\n      switch (attr) {\n        case 'dummyTemplate':\n          this._createDummyTemplate();\n          break;\n        case 'dummyText':\n          this._createDummyText();\n          break;\n        case 'dummyImg':\n          this._createDummyImg();\n          break;\n        case 'dummyList':\n          this._createDummyList();\n          break;\n        case 'dummyTable':\n          this._createDummyTable();\n          break;\n        case 'dummyCopy':\n          this._createDummyCopy();\n          break;\n        case 'dummyRepeat':\n          this._createDummyRepeat();\n          break;\n        default:\n          return;\n      }\n    });\n  }\n\n  _matchDummyWithTag(tag) {\n    const caseTag = tag || this._tag;\n\n    switch (caseTag) {\n      case 'img':\n        this._createDummyImg();\n        break;\n      case 'ul':\n      case 'ol':\n        this._createDummyList();\n        break;\n      case 'table':\n        this._createDummyTable();\n        break;\n      default:\n        this._createDummyText();\n        break;\n    }\n  }\n\n  _determineDummyElement(tag) {\n    let el = this._element;\n\n    if (this._tag !== tag) {\n      const element = document.createElement(tag);\n\n      this._element.appendChild(element);\n\n      Manipulator.setDataAttribute(element, 'dummyCreated', '');\n\n      el = element;\n    }\n\n    return el;\n  }\n\n  _createDummyText() {\n    this._element[this._tag === 'input' ? 'value' : 'innerHTML'] += this._generateDummyText();\n\n    if (this._options.dummyTextColor) {\n      Manipulator.addStyle(this._element, { color: this._options.dummyTextColor });\n    }\n\n    this._removeAttribute('data-mdb-dummy-text');\n  }\n\n  _generateDummyText(length) {\n    const dummyTextLength = length || this._options.dummyText;\n\n    const getWord = () => {\n      return WORDS[Math.floor(Math.random() * WORDS.length)];\n    };\n\n    let text = getWord();\n    text = text.charAt(0).toUpperCase() + text.slice(1);\n\n    while (text.length < dummyTextLength) {\n      text += ` ${getWord()}`;\n    }\n\n    text = text.slice(0, dummyTextLength);\n    return text;\n  }\n\n  _generateMultipleTextTags(tag, length = 5, dummyTextLength = this._options.dummyText) {\n    let tags = '';\n\n    for (let i = 0; i < length; i++) {\n      // eslint-disable-next-line\n      tags += `<${tag} data-mdb-dummy-created>${this._generateDummyText(dummyTextLength)}</${tag}>`;\n    }\n\n    return tags;\n  }\n\n  _createDummyImg() {\n    const element = this._determineDummyElement('img');\n    const query = this._generateQueryString();\n\n    element.src = query;\n\n    Manipulator.addStyle(element, { maxWidth: '100%' });\n\n    this._removeAttribute('data-mdb-dummy-img');\n  }\n\n  _generateQueryString() {\n    const [width, height] = this._getImageSize();\n    const bgColor = this._getColor('dummyColor');\n    const dummyTextColor = this._getColor('dummyTextColor');\n    const text = this._generateTextFromData();\n    const query = `${width}x${height}${bgColor}${dummyTextColor}${text}`;\n\n    return `https://place-hold.it/${query}`;\n  }\n\n  _generateTextFromData() {\n    // data-mdb-text can be null which means user wants text to be generated\n    let text = '';\n\n    if (this._dummyAttributes.includes('dummyImgText')) {\n      text = `?text=${\n        this._options.dummyImgText !== null ? this._options.dummyImgText : this._generateDummyText()\n      }`;\n      text = text.split(' ').join('+');\n    }\n\n    return text;\n  }\n\n  _createDummyList() {\n    const element = this._determineDummyElement('ul');\n\n    const listTemplate = this._generateMultipleTextTags('li', this._options.dummyList);\n\n    element.innerHTML = listTemplate;\n\n    this._removeAttribute('data-mdb-dummy-list');\n  }\n\n  _createDummyTable() {\n    const element = this._determineDummyElement('table');\n    const template = this._generateTableTemplate();\n\n    if (!element.classList.contains('table')) {\n      Manipulator.addClass(element, 'table');\n    }\n    element.innerHTML = template;\n\n    this._removeAttribute('data-mdb-dummy-table');\n  }\n\n  _generateTableTemplate() {\n    let [rows, cols] = `${this._options.dummyTable}`.split(',');\n\n    rows = rows ? rows.trim() : rows;\n    cols = cols ? cols.trim() : cols;\n\n    cols = cols || rows;\n\n    const dummyColumns = new Array(Number(cols)).fill(this._generateDummyText());\n    const dummyRow = new Array(Number(cols)).fill(this._generateDummyText());\n    const dummyRows = new Array(Number(rows)).fill(dummyRow);\n    const tableHTMLTemplate = `\n      <thead>\n        <tr>\n          ${dummyColumns.map((col) => `<th>${col}</th>`).join('')}\n        </tr>\n      </thead>\n        <tbody>${dummyRows\n          .map((row) => {\n            return `<tr>${row.map((cell) => `<td>${cell}</td>`).join(' ')}</tr>`;\n          })\n          .join(' ')}\n      </tbody>\n    `;\n\n    return tableHTMLTemplate;\n  }\n\n  _createDummyCopy() {\n    let originalElement = SelectorEngine.findOne(this._options.dummyCopy);\n\n    if (!originalElement) {\n      originalElement = {\n        outerHTML: `<p class=\"note note-warning\"><strong>Element <code>${this._options.dummyCopy}</code> not found</strong></p>`,\n      };\n    }\n\n    this._element.innerHTML =\n      originalElement[\n        originalElement.tagName === 'SCRIPT' || originalElement.tagName === 'TEMPLATE'\n          ? 'innerHTML'\n          : 'outerHTML'\n      ];\n\n    this._removeAttribute('data-mdb-dummy-copy');\n\n    // prevents from having two elements with same ID\n    if (this._options.dummyCopy.startsWith('#')) {\n      const copy = SelectorEngine.findOne(this._options.dummyCopy, this._element);\n      copy.removeAttribute('id');\n    }\n  }\n\n  _createDummyRepeat() {\n    if (!this._element.innerHTML) {\n      this._matchDummyWithTag();\n    }\n\n    this._removeAttribute('data-mdb-dummy-repeat');\n\n    const dummies = SelectorEngine.find(SELECTOR_DATA_INIT, this._element);\n\n    if (dummies.length > 0) {\n      dummies.forEach((dummy) => {\n        // eslint-disable-next-line no-new\n        new Dummy(dummy);\n      });\n    }\n\n    for (let i = 0; i < this._options.dummyRepeat; i++) {\n      const element = document.createElement(this._tag);\n\n      this._element.parentNode.insertBefore(element, this._element.nextSibling);\n\n      element.outerHTML = this._element.outerHTML;\n\n      Manipulator.setDataAttribute(element, 'dummyCreated', '');\n    }\n\n    // will find only dummies that were created by dummyRepeat\n    const dummyRepeats = SelectorEngine.find(\n      `${this._tag}${SELECTOR_DATA_INIT} + ${this._tag}${SELECTOR_DATA_INIT}`,\n      this._element.parentNode\n    );\n    dummyRepeats.forEach((dummy) => {\n      Manipulator.setDataAttribute(dummy, 'dummyCreated', '');\n      if (dummy.id === this._element.id) {\n        dummy.removeAttribute('id');\n      }\n    });\n  }\n\n  _createDummyTemplate() {\n    const dataTemplate = this._element.getAttribute('data-mdb-dummy-template');\n    const template = dataTemplate || this._options.dummyTemplate;\n    const tags = this._generateTemplateString(template);\n\n    Manipulator.addClass(this._element, 'container');\n\n    this._element.innerHTML = tags;\n\n    this._initializeComponents(template);\n\n    this._removeAttribute('data-mdb-dummy-template');\n  }\n\n  _generateTemplateString(templateString) {\n    let tags = templateString.split(',');\n\n    const nonDummyTags = {\n      a: () => `<a href=\"#\" style=\"margin-bottom: 1rem\"/>${this._generateDummyText()}</a>`,\n      img: () => {\n        this._options.dummyImg = '100%,700';\n        return `<img src=${this._generateQueryString()} style=\"max-width:100%; margin-bottom: 1rem\"/>`;\n      },\n      ul: () => `<ul>${this._generateMultipleTextTags('li', 5)}</ul>`,\n      ol: () => `<ol>${this._generateMultipleTextTags('li', 5)}</ol>`,\n      table: () => `<table class=\"table\">${this._generateTableTemplate()}</table>`,\n      select: () => `<select class=\"select\">${this._generateMultipleTextTags('option')}</select>`,\n      button: () =>\n        `<button class=\"btn btn-primary my-3\" data-mdb-ripple-init>${this._generateDummyText(\n          10\n        )}</button>`,\n      input: () => {\n        const id = getUID('dummy-input-');\n        const inputTemplate = `\n          <div class=\"form-outline\">\n            <input type=\"text\" id=\"${id}\" class=\"form-control\" />\n            <label class=\"form-label\" for=\"${id}\">${this._generateDummyText()}</label>\n          </div>\n        `;\n        return inputTemplate;\n      },\n      textarea: () => {\n        const id = getUID('dummy-textarea-');\n        const inputTemplate = `\n          <div class=\"form-outline\">\n            <textarea type=\"text\" id=\"${id}\" class=\"form-control\" rows=\"4\"></textarea>\n            <label class=\"form-label\" for=\"${id}\">${this._generateDummyText()}</label>\n          </div>\n        `;\n        return inputTemplate;\n      },\n      form: () =>\n        `<section class=\"p-4 d-flex justify-content-center mb-4\">\n          <form action=\"#\" style=\"width: 100%; max-width:26rem\">${this._generateTemplateString(\n            'input,textarea,select,button'\n          )}\n          </form>\n        </section>\n      `,\n      blockquote: () =>\n        `<figure>\n        <blockquote class=\"blockquote\">\n          <p>\n          ${this._generateDummyText(50)}\n          </p>\n        </blockquote>\n        <figcaption class=\"blockquote-footer\">\n          ${this._generateDummyText(\n            10\n          )}<cite title=\"Source Title\"> ${this._generateDummyText()}</cite>\n        </figcaption>\n      </figure>`,\n    };\n\n    tags = tags\n      .map((tag) => tag.trim().toLowerCase())\n      // eslint-disable-next-line no-confusing-arrow\n      .map((tag) =>\n        nonDummyTags[tag] ? nonDummyTags[tag]() : this._generateMultipleTextTags(tag, 1, 100)\n      )\n      .join('');\n\n    return tags;\n  }\n\n  _initializeComponents(template) {\n    const tags = template.split(',');\n\n    const initInput = () => {\n      SelectorEngine.find('.form-outline', this._element).forEach((formOutline) => {\n        new mdb.Input(formOutline).init();\n      });\n    };\n    const initSelect = () => {\n      SelectorEngine.find('select', this._element).forEach((select) => {\n        // eslint-disable-next-line no-new\n        new mdb.Select(select);\n      });\n    };\n\n    tags.forEach((tag) => {\n      switch (tag) {\n        case 'input':\n          initInput();\n          break;\n        case 'select':\n          initSelect();\n          break;\n        case 'form':\n          initInput();\n          initSelect();\n          break;\n        default:\n          return;\n      }\n    });\n\n    SelectorEngine.find('.form-outline', this._element).forEach((formOutline) => {\n      Manipulator.addStyle(formOutline, { marginBottom: '1rem' });\n    });\n  }\n\n  _cleanObjectFromNulls(obj) {\n    const propNames = Object.getOwnPropertyNames(obj);\n    for (let i = 0; i < propNames.length; i++) {\n      const propName = propNames[i];\n      if (obj[propName] === null || obj[propName] === undefined) {\n        delete obj[propName];\n      }\n    }\n\n    return obj;\n  }\n\n  _removeAttribute(attr) {\n    // attribute can be emtpy/null which Manipulator will treat as if there is no attribute\n    if (this._element.hasAttribute(attr)) {\n      this._element.removeAttribute(attr);\n    }\n  }\n\n  // Static\n  static get NAME() {\n    return NAME;\n  }\n\n  static jQueryInterface(config, options) {\n    return this.each(function () {\n      let data = Data.getData(this, DATA_KEY);\n      const _config = typeof config === 'object' && config;\n\n      if (!data && /dispose/.test(config)) {\n        return;\n      }\n\n      if (!data) {\n        data = new Dummy(this, _config);\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n\n        data[config](options);\n      }\n    });\n  }\n\n  static getInstance(element) {\n    return Data.getData(element, DATA_KEY);\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation - auto initialization\n * ------------------------------------------------------------------------\n */\n\nSelectorEngine.find(SELECTOR_DATA_INIT).forEach((el) => {\n  let instance = Dummy.getInstance(el);\n  if (!instance) {\n    instance = new Dummy(el);\n  }\n\n  return instance;\n});\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Dummy to jQuery only if jQuery is present\n */\n\nonDOMContentLoaded(() => {\n  const $ = getjQuery();\n\n  if ($) {\n    const JQUERY_NO_CONFLICT = $.fn[NAME];\n    $.fn[NAME] = Dummy.jQueryInterface;\n    $.fn[NAME].Constructor = Dummy;\n    $.fn[NAME].noConflict = () => {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Dummy.jQueryInterface;\n    };\n  }\n});\n\nexport default Dummy;\n"],"names":["getUID","prefix","Math","floor","random","document","getElementById","documentElement","dir","mapData","storeData","id","set","element","key","data","get","keyProperties","Data","setData","instance","getData","removeData","delete","normalizeData","val","Number","toString","normalizeDataKey","replace","chr","toLowerCase","Manipulator","setDataAttribute","value","setAttribute","removeDataAttribute","removeAttribute","getDataAttributes","attributes","dataset","Object","keys","filter","startsWith","forEach","pureKey","charAt","slice","length","getDataAttribute","getAttribute","offset","rect","getBoundingClientRect","top","body","scrollTop","left","scrollLeft","position","offsetTop","offsetLeft","style","assign","toggleClass","className","classList","contains","remove","add","addClass","addStyle","property","removeClass","hasClass","findElements","Element","prototype","querySelectorAll","findElement","querySelector","e","CustomEvent","cancelable","createElement","addEventListener","preventDefault","dispatchEvent","defaultPrevented","scopeSelectorRegex","_","selector","test","this","hasId","Boolean","nodeList","matches","find","call","findOne","SelectorEngine","closest","concat","findFn","children","child","parents","ancestor","parentNode","nodeType","Node","ELEMENT_NODE","push","prev","previous","previousElementSibling","next","nextElementSibling","WORDS","NAME","DATA_KEY","SELECTOR_DATA_INIT","SELECTOR_DUMMY_CREATED","DEFAULT_OPTIONS","dummyText","dummyImg","dummyList","dummyTable","dummyCopy","dummyRepeat","dummyTemplate","dummyColor","dummyTextColor","dummyImgText","OPTIONS_TYPE","Dummy","constructor","options","_element","_jsOptions","_options","_getConfig","_tag","_dummyAttributes","_init","dispose","dummy","removeChild","innerHTML","init","_cleanObjectFromNulls","config","componentName","configTypes","expectedTypes","valueType","obj","match","toType","RegExp","Error","toUpperCase","typeCheckConfig","_getImageSize","width","height","split","trim","parseInt","offsetWidth","offsetHeight","_getColor","attr","_setDummyAttributes","initMDB","Ripple","mdb","tagName","_startDummyFactory","hasTagAttribute","prop","includes","_createDummyTemplate","_createDummyText","_createDummyImg","_createDummyList","_createDummyTable","_createDummyCopy","_createDummyRepeat","_matchDummyWithTag","tag","_determineDummyElement","el","appendChild","_generateDummyText","color","_removeAttribute","dummyTextLength","getWord","text","_generateMultipleTextTags","tags","i","query","_generateQueryString","src","maxWidth","_generateTextFromData","join","listTemplate","template","_generateTableTemplate","rows","cols","dummyColumns","Array","fill","dummyRow","dummyRows","map","col","row","cell","originalElement","outerHTML","dummies","insertBefore","nextSibling","_generateTemplateString","_initializeComponents","templateString","nonDummyTags","a","img","ul","ol","table","select","button","input","textarea","form","blockquote","initInput","formOutline","Input","initSelect","Select","marginBottom","propNames","getOwnPropertyNames","propName","hasAttribute","jQueryInterface","each","_config","TypeError","getInstance","callback","$","jQuery","window","getjQuery","JQUERY_NO_CONFLICT","fn","Constructor","noConflict","readyState"],"mappings":"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nB,MAAO,CAACwB,GAGVA,EAAWA,EAASC,sBACrB,CAED,MAAO,EACR,EAED,IAAAC,CAAKzG,EAAS+E,GACZ,IAAI0B,EAAOzG,EAAQ0G,mBAEnB,KAAOD,GAAM,CACX,GAAIxB,KAAKI,QAAQoB,EAAM1B,GACrB,MAAO,CAAC0B,GAGVA,EAAOA,EAAKC,kBACb,CAED,MAAO,EACR,GClFGC,EAAQ,CACZ,eACA,cACA,UACA,cACA,aACA,WACA,cACA,cACA,gBACA,WACA,SACA,WACA,UACA,eACA,oBACA,QACA,gBACA,eACA,QACA,QACA,WACA,YACA,SACA,UACA,cACA,aACA,YACA,WACA,eACA,WACA,cACA,YACA,UACA,SACA,QACA,aACA,QACA,YACA,aACA,aACA,WACA,WACA,SACA,cACA,WACA,YACA,WACA,WACA,aACA,aACA,cACA,UACA,aACA,QACA,QACA,YACA,WACA,UACA,QACA,WACA,WACA,YACA,kBACA,OACA,YACA,OACA,QACA,SACA,QACA,UACA,UACA,YACA,UACA,eACA,SACA,UACA,cACA,YACA,YACA,WACA,OACA,QACA,YACA,UACA,cACA,QACA,QACA,cACA,cACA,iBACA,gBACA,eACA,YACA,WACA,OACA,cACA,YACA,MACA,UACA,kBACA,iBACA,WACA,YACA,WACA,WACA,eACA,gBACA,WACA,YACA,YACA,YACA,UACA,aACA,SACA,QACA,cACA,iBACA,eACA,mBACA,eACA,QACA,cACA,WACA,cACA,SACA,cACA,aACA,UACA,YACA,QACA,QACA,eACA,QACA,SACA,WACA,YACA,gBACA,kBACA,kBACA,QACA,WACA,WACA,WACA,cACA,aACA,YACA,YACA,YACA,aACA,UACA,cACA,YACA,gBACA,eACA,eACA,UACA,WACA,cACA,aACA,YACA,YACA,iBACA,YACA,aACA,gBACA,OACA,aACA,UACA,aACA,WACA,aACA,eACA,UACA,cACA,cACA,aACA,MACA,aACA,YACA,UACA,aACA,WACA,OACA,YACA,SACA,eACA,YACA,oBACA,YACA,UACA,SACA,WACA,SACA,aACA,cACA,aACA,YACA,kBACA,eACA,kBACA,UACA,aACA,YACA,YACA,eACA,QACA,YACA,aACA,UACA,cACA,UACA,mBACA,aACA,WACA,eACA,QACA,SACA,QACA,WACA,WACA,cACA,SACA,cACA,UACA,QACA,WACA,aACA,cACA,eACA,eACA,UACA,YACA,YACA,cACA,cACA,cACA,QACA,YACA,SACA,aACA,WACA,UACA,iBACA,UACA,aACA,WACA,UACA,cACA,eACA,WACA,gBACA,aACA,WACA,SACA,cACA,WACA,cACA,eACA,YACA,kBACA,YACA,aACA,eACA,UACA,YACA,aACA,OACA,WACA,eACA,YACA,WACA,UACA,SACA,aACA,aACA,cACA,WACA,YACA,aACA,WACA,YACA,WACA,QACA,aACA,cACA,aACA,SACA,UACA,QACA,YACA,WACA,aACA,cACA,gCACA,mBACA,iBACA,YACA,aC7RIC,EAAO,QACPC,EAAW,OAAOD,IAElBE,EAAqB,wBACrBC,EAAyB,aAAaH,aAEtCI,EAAkB,CACtBC,UAAW,GACXC,SAAU,MACVC,UAAW,EACXC,WAAY,MACZC,UAAW,KACXC,YAAa,EACbC,cAAe,yCACfC,WAAY,KACZC,eAAgB,KAChBC,aAAc,MAEVC,EAAe,CACnBV,UAAW,mBACXC,SAAU,mBACVC,UAAW,mBACXC,WAAY,mBACZC,UAAW,mBACXC,YAAa,mBACbC,cAAe,mBACfC,WAAY,mBACZC,eAAgB,mBAChBC,aAAc,oBAShB,MAAME,EACJ,WAAAC,CAAY7H,EAAS8H,EAAU,IAC7B7C,KAAK8C,SAAW/H,EAChBiF,KAAK+C,WAAaF,EACb7C,KAAAgD,SAAWhD,KAAKiD,WAAWJ,GAEhC7C,KAAKkD,KAAO,KACZlD,KAAKmD,iBAAmB,GAEpBnD,KAAK8C,WACF1H,EAAAC,QAAQN,EAAS6G,EAAU5B,MAChCA,KAAKoD,QAER,CAGD,OAAAC,GACOjI,EAAAI,WAAWwE,KAAK8C,SAAUlB,GAEVpB,EAAeH,KAAKyB,GAE5B/E,SAASuG,IACdA,EAAAtC,WAAWuC,YAAYD,EA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"}